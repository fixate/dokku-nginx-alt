#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

set -a #export all subsequently defined variables for template access
# Bash templating snippet from: http://stackoverflow.com/a/2916159/66771 
# NOTE: Template variables must be exported (done with set -a above) and placed
# in brackets (like ${...}) for the regex to process it.
shopt -s expand_aliases
alias process_template="perl -p -e 's/\\$\{([^}]+)\}/defined \$ENV{\$1} ? \$ENV{\$1} : \$&/eg'"

echo "-----> Deploying nginx..."
APP="$1"; PORT="$2"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" #this directory
APP_PATH="$DOKKU_ROOT/$APP"
VHOST_PATH="$APP_PATH/VHOST"
WILDCARD_SSL_PATH="$DOKKU_ROOT/tls"
APP_SSL_PATH="$APP_PATH/tls"

# Get list of VHOST domains. This will be overridden below if SSL for some
# domains are enabled. If VHOST does not exist, set to empty string.
NONSSL_VHOSTS=`cat $VHOST_PATH 2>&- || echo ''`

# Load app config variables such that the template can access them like:
# ${MY_VAR}.
source $APP_PATH/ENV || true

# Remove old nginx.conf if exists
rm -f $APP_PATH/nginx.conf #need -f to supress error if non-existent file

# Add once-off configuration options.  
echo '-----> Configuring once-off options...'
NGINX_ONCE_CONF="$DIR/nginx.once.conf"
APP_NGINX_ONCE_TEMPLATE="$APP_PATH/nginx.once.tpl"
if [[ -e $APP_NGINX_ONCE_TEMPLATE ]]; then
  echo '-----> Overriding default nginx.once.conf with detected nginx.once.tpl'
  NGINX_ONCE_CONF=$APP_NGINX_ONCE_TEMPLATE
fi
cat $NGINX_ONCE_CONF | process_template >> $APP_PATH/nginx.conf

# Check if SSL should be enabled. If there are $DOKKU_ROOT/tls certificates,
# try to use those. If the app has an tls/ directory, these override the root
# ssl certificates.
SSL_PATH=$WILDCARD_SSL_PATH
if [[ -e "$APP_SSL_PATH/server.crt" ]] && [[ -e "$APP_SSL_PATH/server.key" ]]; then
  SSL_PATH=$APP_SSL_PATH
fi

if [[ -e "$SSL_PATH/server.crt" ]] && [[ -e "$SSL_PATH/server.key" ]]; then
  NGINX_CONF="$DIR/nginx.ssl.conf" #default SSL conf file

  # Ability to override default configuration files
  # (If a nginx.ssl.tpl file exists in the $APP_PATH directory, use that
  # instead.)
  APP_NGINX_SSL_TEMPLATE="$APP_PATH/nginx.ssl.tpl"
  if [[ -e $APP_NGINX_SSL_TEMPLATE ]]; then
    echo '-----> Overriding default SSL nginx.conf with detected nginx.ssl.tpl'
    NGINX_CONF=$APP_NGINX_SSL_TEMPLATE
  fi

  # Setup SSL vitual host
  cat $NGINX_CONF | process_template >> $APP_PATH/nginx.conf
  VHOST=$(< "$VHOST_PATH")
  echo "https://$VHOST:$PORT" > "$DOKKU_ROOT/$APP/URL"
fi

# Now handle non-SSL domains
NGINX_CONF="$DIR/nginx.conf" # default non-SSL conf file

# Ability to override default configuration files
# (If a nginx.tpl file exists in the $APP_PATH directory, use that instead.)
APP_NGINX_TEMPLATE="$APP_PATH/nginx.tpl"
if [[ -e $APP_NGINX_TEMPLATE ]]; then
  echo '-----> Overriding default nginx.conf with detected nginx.tpl'
  NGINX_CONF=$APP_NGINX_TEMPLATE
fi
cat $NGINX_CONF | process_template >> $APP_PATH/nginx.conf

echo "-----> Running nginx-pre-reload"
pluginhook nginx-pre-reload $APP $PORT
echo '-----> Reloading nginx...'
sudo /etc/init.d/nginx reload > /dev/null

cat #prints output from any plugins chained to this
